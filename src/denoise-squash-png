#!/bin/sh
set -e; set +H

if [ -z "$1" ] ; then
	>&2 echo "$0 filename.png"
	exit 1
fi

FINISHED_OPTIPNG=false
FINISHED_ALL=false

INPUT="$1"
QUIET=false
shift

for i; do
	if [ "$i" = "--quiet" ] ; then
		QUIET=true
	else
		LEVEL="$i"
	fi
done

if $QUIET; then
	STDOUT="/dev/null"
	STDERR="/dev/null"
else
	STDOUT="/dev/stderr"
	STDERR="/dev/stderr"
fi

BAKPNG="$INPUT".denoisesquashpng_backup.$RANDOM
while [ -e "$BAKPNG" ] ; do
	BAKPNG="$BAKPNG".$RANDOM
done

clup() {
	if $FINISHED_OPTIPNG ; then
		if ! $FINISHED_ALL ; then >&2 echo "Received signal, cleaning up." ; fi
		cp --attributes-only --preserve=all "$BAKPNG" "$INPUT"
		rm -f "$TEMPFILE1"
		rm -f "$BAKPNG"
	else
		>&2 echo "Received signal, restoring from backup."
		cp --preserve=all "$BAKPNG" "$INPUT"
		rm -f "$TEMPFILE1"
		rm -f "$BAKPNG"
		rm -f "$INPUT".bak
	fi
}

trap clup EXIT

cp --preserve=all "$INPUT" "$BAKPNG"

TEMPFILE1="$(mktemp --suffix=.png)"

waifu2x-converter-cpp --mode noise --noise_level "$LEVEL" -i "$INPUT" -o "$TEMPFILE1" >$STDOUT

INHEIGHT="$(identify -format '%h' "$INPUT")"
INWIDTH="$(identify -format '%w' "$INPUT")"

if [ "$INHEIGHT" -gt 720 ] || [ "$INWIDTH" -gt 1280 ]; then
	# It maintains aspect and fits it inside 1280x720
	convert -filter Lanczos2Sharp -resize 1280x720 -depth 8 -selective-blur 0x1+1% "$TEMPFILE1" "$INPUT"
else
	convert -depth 8 -selective-blur 0x1+1% "$TEMPFILE1" "$INPUT"
fi

if $QUIET; then
	OQUIET="-quiet"
else
	OQUIET=" "	
fi

optipng $OQUIET -preserve -zc9 -zm8 -zs1 -f5 "$INPUT"
FINISHED_OPTIPNG=true

zopflipng -y -m --filters=04me "$INPUT" "$TEMPFILE1" >$STDOUT
cp "$TEMPFILE1" "$INPUT"
FINISHED_ALL=true

